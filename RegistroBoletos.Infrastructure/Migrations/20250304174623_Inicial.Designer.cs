// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RegistroBoletos.Infrastructure.Contexto;

#nullable disable

namespace RegistroBoletos.Infrastructure.Migrations
{
    [DbContext(typeof(ContextoBanco))]
    [Migration("20250304174623_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RegistroBoletos.Domain.Entidades.Bancos.Banco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("idbanco")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("CodigoBanco")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("codigobanco");

                    b.Property<decimal>("JuroPerc")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("jurosperc");

                    b.Property<string>("NomeBanco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomebanco");

                    b.HasKey("Id");

                    b.ToTable("tb_banco", (string)null);
                });

            modelBuilder.Entity("RegistroBoletos.Domain.Entidades.Boletos.Boleto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("idboleto")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("CodigoBanco")
                        .HasColumnType("uuid")
                        .HasColumnName("idbanco");

                    b.Property<string>("CpfCnpjBeneficiario")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpfcnpjbeneficiario");

                    b.Property<string>("CpfCnpjPagador")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpfcnpjpagador");

                    b.Property<DateTime>("DataVencto")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datavencimento");

                    b.Property<string>("NomeBeneficiario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomebeneficiario");

                    b.Property<string>("NomePagador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomepagador");

                    b.Property<string>("Obs")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("obs");

                    b.Property<decimal>("Valor")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("CodigoBanco");

                    b.ToTable("tb_boleto", (string)null);
                });

            modelBuilder.Entity("RegistroBoletos.Domain.Entidades.Boletos.Boleto", b =>
                {
                    b.HasOne("RegistroBoletos.Domain.Entidades.Bancos.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("CodigoBanco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");
                });
#pragma warning restore 612, 618
        }
    }
}
